params: {}
output: |-
  ConvClassifier(
    (embedding): Embedding(5, 8)
    (conv): Sequential(
      (0): Conv1d(8, 64, kernel_size=(3,), stride=(1,), padding=same)
      (1): ReLU()
      (2): Dropout(p=0.5, inplace=False)
      (3): MaxPool1d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (4): Conv1d(64, 128, kernel_size=(3,), stride=(1,), padding=same)
      (5): ReLU()
      (6): Dropout(p=0.5, inplace=False)
      (7): MaxPool1d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (8): Conv1d(128, 256, kernel_size=(3,), stride=(1,), padding=same)
      (9): ReLU()
      (10): Dropout(p=0.5, inplace=False)
      (11): MaxPool1d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (12): Conv1d(256, 512, kernel_size=(3,), stride=(1,), padding=same)
      (13): ReLU()
      (14): Dropout(p=0.5, inplace=False)
      (15): MaxPool1d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (16): Conv1d(512, 1024, kernel_size=(3,), stride=(1,), padding=same)
      (17): ReLU()
      (18): Dropout(p=0.5, inplace=False)
      (19): MaxPool1d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
      (20): Conv1d(1024, 2048, kernel_size=(3,), stride=(1,), padding=same)
      (21): ReLU()
      (22): Dropout(p=0.5, inplace=False)
      (23): MaxPool1d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    )
    (average_pool): AdaptiveAvgPool1d(output_size=1)
    (final): Sequential(
      (0): Linear(in_features=2048, out_features=2048, bias=True)
      (1): ReLU()
      (2): Linear(in_features=2048, out_features=12, bias=True)
    )
  )
